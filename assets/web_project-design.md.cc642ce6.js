import{_ as l,c as s,o as a,a as n}from"./app.b92061e5.js";const m=JSON.parse('{"title":"项目设计","description":"","frontmatter":{},"headers":[{"level":2,"title":"开发一个前端统计SDK，你会如何设计？","slug":"开发一个前端统计sdk-你会如何设计","link":"#开发一个前端统计sdk-你会如何设计","children":[]},{"level":2,"title":"如果你是前端负责人，如何做技术选型？","slug":"如果你是前端负责人-如何做技术选型","link":"#如果你是前端负责人-如何做技术选型","children":[]},{"level":2,"title":"sourcemap有什么作用？如何配置？","slug":"sourcemap有什么作用-如何配置","link":"#sourcemap有什么作用-如何配置","children":[]},{"level":2,"title":"何时用SPA，何时用MPA？","slug":"何时用spa-何时用mpa","link":"#何时用spa-何时用mpa","children":[]},{"level":2,"title":"作为项目前端技术负责人，主要的职责是什么？","slug":"作为项目前端技术负责人-主要的职责是什么","link":"#作为项目前端技术负责人-主要的职责是什么","children":[{"level":3,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":3,"title":"把控需求","slug":"把控需求","link":"#把控需求","children":[]},{"level":3,"title":"技术方案设计","slug":"技术方案设计","link":"#技术方案设计","children":[]},{"level":3,"title":"开发","slug":"开发","link":"#开发","children":[]},{"level":3,"title":"监督代码质量","slug":"监督代码质量","link":"#监督代码质量","children":[]},{"level":3,"title":"跟踪进度","slug":"跟踪进度","link":"#跟踪进度","children":[]},{"level":3,"title":"稳定安全的运行","slug":"稳定安全的运行","link":"#稳定安全的运行","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"使用Vue + Vuex开发H5编辑器","slug":"使用vue-vuex开发h5编辑器","link":"#使用vue-vuex开发h5编辑器","children":[]}],"relativePath":"web/project-design.md","lastUpdated":1673182845000}'),e={name:"web/project-design.md"},p=n(`<h1 id="项目设计" tabindex="-1">项目设计 <a class="header-anchor" href="#项目设计" aria-hidden="true">#</a></h1><p>项目设计或者叫项目场景设计，给你一个场景、项目或者需求让你来设计一个方案。因为企业招人一般招两种人，一种是刚毕业的新人，给什么活写代码就好了，能自己独立的解决问题和bug就可以了。另外一种是来了之后代领大家一块干，交给你一个任务能独立的设计出来，并把控需求、设计、开发以及上线，所以这个是针对工作经验多一些的老人，就会考察项目设计的问题。如果只是问了几个面试题，不管是背诵过了还是理解了，深度广度也有了，仅仅这样就招进来带项目就有点不合适。所以就要问一问，找个场景问项目设计的经验和能力。</p><p>为何要考察呢？</p><ul><li>是否具有独立承担项目的能力，培养为项目负责人。</li><li>设计能力是否匹配工作经验的时间</li></ul><p>考察重点：</p><ul><li>识别需求，转化为功能</li><li>功能模块的设计</li><li>数据模型的设计</li></ul><p>注意事项：</p><ul><li>要看整体设计，不要纠细节</li></ul><p>例如：</p><ul><li>要你开发一个前端统计SDK，你会如何设计？</li><li>一个H5编辑器(低代码)，提交到服务端的数据格式怎样设计？</li><li>让你做团队的技术选型，你会考虑什么？</li></ul><h2 id="开发一个前端统计sdk-你会如何设计" tabindex="-1">开发一个前端统计SDK，你会如何设计？ <a class="header-anchor" href="#开发一个前端统计sdk-你会如何设计" aria-hidden="true">#</a></h2><p>前端统计是非常大的一个东西，线上的前端页面都需要加前端统计，前端统计SDK是每一个产品或公司都要做的内容，它的应用范围很广。</p><p>前端统计SDK是将前端的原始数据统计发送给服务端，这个服务端是统计服务端也有可能是第三方服务端，统计服务端会去做离线计算(今天发送的所有数据在凌晨或者其他时间点进行计算)，然后产生结果生成报表，根据结果优化页面，形成闭环。</p><p>那么SDK会把哪些数据发送给服务端呢？</p><ul><li>访问量PV，每天有多少人访问这个页面</li><li>自定义事件，比如一个页面有两个按钮，是否升级为vip，一个确定一个取消，统计有多少人点击了确定和取消</li><li>性能和错误统计</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyStatistic</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">productId</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">productId</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">productId</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">initPerformance</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//性能统计</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">initError</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//错误监控</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//发送统计数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">send</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">={}){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//初始化性能数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">initPerformance</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//初始化错误监控</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">initError</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="如果你是前端负责人-如何做技术选型" tabindex="-1">如果你是前端负责人，如何做技术选型？ <a class="header-anchor" href="#如果你是前端负责人-如何做技术选型" aria-hidden="true">#</a></h2><p>技术选型，选什么呢？</p><ul><li>前端框架(Vue、React、Nuxt.js、Next.js或者nodejs框架)</li><li>前端语言(javaScript或TypeScript)</li><li>其他(构建工具、CI/CD等 )</li></ul><p>技术没有好快之分，看是否适合自己。尤其是刚毕业的小白很容易被网上带节奏，像React就是比Vue好，用Vue的都是小白，Vue3都发布了，赶紧用！Svelte是新框架，要拥抱未来！TS就是比JS高级，网上都是夸赞TS的文章等等。网上怎么说是网上怎么说，要看是否适合自己以及团队，认真平等的对待技术。</p><p>技术选型的依据是什么呢？</p><ol><li>社区是否成熟，社区成熟指的是它经过了非常多的验证，已经足够成熟稳定了。如果出了问题，社区成熟做的人多，大家可以一块讨论解决。如果选了一个小众的，出了问题没人改。其次用的人多你身边会的人多，一旦自己请假了别人也能够快速的接手。</li><li>公司是否已有经验积累，如果公司已经对Vue或者React框架用了很长时间，积累了很多的组件，那么应该继承它去做，这样比较好。当然看之前积累的好不好，如果很烂那就重新开辟一下。</li><li>团队成员的学习成本，比如团队有五个人开发这个项目，你选了一个技术栈，大家都不会只有你自己会，这样就不合适了。</li></ol><p>要全面考虑各种成本，例如：</p><ol><li>学习成本</li><li>管理成本，如果用TS遍地any怎么办？这就需要人为控制了。</li><li>运维成本，框架不一样，语言不一样，运维成本也不一样。</li></ol><p>所以初期选型是关键，所谓一将无能累死三军，技术选型很好的体验了一个人的技术修养。要站在团队的角度，而非个人的角度。</p><h2 id="sourcemap有什么作用-如何配置" tabindex="-1">sourcemap有什么作用？如何配置？ <a class="header-anchor" href="#sourcemap有什么作用-如何配置" aria-hidden="true">#</a></h2><p>sourcemap与JS报错关联性很强，那么sourcemap的作用是什么？</p><ol><li>JS上线时要压缩、混淆</li><li>线上的JS报错信息，将无法识别行、列。因为线上JS报错的哪一行哪一列都是压缩后的。</li><li>sourcemap就可以解决这个问题，它可以将线上混淆压缩后的报错信息转换成混淆压缩前源码中哪个文件第几行第几列的信息，这就是sourcemap的作用。</li></ol><p>sourcemap本质上是一个文件，这个文件中有很多东西表示对应关系。webpack通过devtool配置sourcemap。</p><ol><li>eval：JS在eval(...)中，不生成sourcemap</li><li>source-map：生成单独的map文件，并在JS最后指定</li><li>eval-source-map：JS在eval(...)中，sourcemap内嵌</li><li>inline-source-map：sourcemap内嵌到JS中</li><li>cheap-source-map：sourcemap只有行信息，没有列信息</li><li>eval-cheap-source-map：同上，没有独立的map文件</li></ol><p>开发环境下推荐使用eval、eval-source-map、eval-cheap-source-map，其实开发环境下不使用也可以，都直接使用源码，不压缩混淆。</p><p>线上环境使用source-map或者无</p><p>如果你是做开源项目，也要开源sourcemap。非开源项目的话，不要泄露sourcemap。了解sourcemap作用和配置即可，编码原理不用深究。</p><h2 id="何时用spa-何时用mpa" tabindex="-1">何时用SPA，何时用MPA？ <a class="header-anchor" href="#何时用spa-何时用mpa" aria-hidden="true">#</a></h2><p>项目用SPA还是MPA这是一个设计的问题。</p><ul><li>SPA：Single-page Application，单页面应用</li><li>MPA：Multi-page Application，多页面应用</li></ul><p>默认情况下，Vue、React都是SPA。</p><p>SPA的特点如下：</p><ol><li>功能较多，一个页面展示不完</li><li>以操作为主，非展示为主</li><li>适合一个综合Web应用</li></ol><p>SPA场景</p><ol><li>大型后台管理系统，如阿里云的console</li><li>知识库，如语雀、石墨文档</li><li>比较复杂的WebApp，如外卖H5</li></ol><p>MPA的特点如下：</p><ol><li>功能较少，一个页面展示的完</li><li>以展示为主，操作较少</li><li>适合一个孤立的页面</li></ol><p>MPA的场景</p><ol><li>分享页，如腾讯文档分享出去</li><li>新闻详情页，如新闻APP的详情页，微信公众号发布的页面</li></ol><h2 id="作为项目前端技术负责人-主要的职责是什么" tabindex="-1">作为项目前端技术负责人，主要的职责是什么？ <a class="header-anchor" href="#作为项目前端技术负责人-主要的职责是什么" aria-hidden="true">#</a></h2><h3 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-hidden="true">#</a></h3><p>项目前端技术负责人，将负责和项目前端开发相关的所有事情，不仅仅是前端范围内的，也不仅仅是开发的事宜。</p><p>目标：保证项目按时、按质量的交付上线，以及上线之后的安全稳定运行。</p><h3 id="把控需求" tabindex="-1">把控需求 <a class="header-anchor" href="#把控需求" aria-hidden="true">#</a></h3><p>新项目开始、或者新功能模块开始时要参与需求评审，认真审阅需求的详细内容，给出评审意见，提出问题。自己已经同意的需求要能保证按时、按质量的完成。</p><p>评审需求需要你能深入理解项目的业务，不仅仅是自己负责的功能，还有上下游全局的串联。所以，一入职的新人无论技术能力多好，都无法立刻作为项目技术负责人，他还需要一段时间的业务积累和熟练。PS：除非他在其他公司已经是这个方面的业务专家。</p><p>需求评审之后，还可能有 UI 设计图的评审，也要参与，提出自己的意见和问题。保证评审通过的 UI 设计图都能保质保量的开发出来。</p><p>需求和 UI 设计图评审完之后，还要给出开发的排期。此时要全面考虑，不仅仅要考虑开发时间，还有内部测试、单元测试的时间，以及考虑一些延期的风险，多加几天的缓冲期。</p><p>最后，在项目进行过程中，老板或者 PM 有可能中途插入新需求。此时要积极沟通，重新评估，还要争取延长项目开发周期。需求增加了，肯定周期也要延长一些。</p><h3 id="技术方案设计" tabindex="-1">技术方案设计 <a class="header-anchor" href="#技术方案设计" aria-hidden="true">#</a></h3><p>需求指导设计，设计指导开发。</p><p>需求和 UI 设计图确定之后，要先进行技术方案设计，写设计文档，评审，通过之后再开发。技术方案设计应该包含核心数据结构的设计，核心流程的设计，核心功能模块的组织和实现。评审时看看这些有没有不合理、隐患、或者和别人开发重复了。</p><p>技术方案设计还要包括和其他对接方的，如和服务端、客户端的接口格式。也要叫他们一起参与评审，待他们同意之后再开发。</p><h3 id="开发" tabindex="-1">开发 <a class="header-anchor" href="#开发" aria-hidden="true">#</a></h3><p>作为技术负责人，不应该把自己的主要精力放在代码开发上，但也不能完全不写代码。</p><p>应该去写一些通用能力，核心功能，底层逻辑的代码。其他比较简单的业务代码，可以交给项目成员来完成。</p><h3 id="监督代码质量" tabindex="-1">监督代码质量 <a class="header-anchor" href="#监督代码质量" aria-hidden="true">#</a></h3><p>技术负责人，可能会带领好多人一起编写代码，但他要把控整个项目的代码质量。例如：</p><ul><li>制定代码规范</li><li>定期组织代码审核</li><li>CI 时使用自动化单元测试</li></ul><h3 id="跟踪进度" tabindex="-1">跟踪进度 <a class="header-anchor" href="#跟踪进度" aria-hidden="true">#</a></h3><p>每天都组织 10 分钟站会，收集当前的进度、风险和问题。如有延期风险，要及时汇报。</p><p>不仅仅要关心前端开发的进度，还要关心上下游。例如上游的 UI 设计图延期，将会导致前端开发时间不够，进而导致测试时 间不够，甚至整个项目延期。</p><h3 id="稳定安全的运行" tabindex="-1">稳定安全的运行 <a class="header-anchor" href="#稳定安全的运行" aria-hidden="true">#</a></h3><p>上线之后，要能实时把控项目运行状态，是否稳定、安全的运行。万一遇到问题，要第一时间报警。</p><p>所以，项目中要增加各种统计和监控功能，例如流量统计、性能统计、错误监控，还有及时报警的机制。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h3><ul><li>把控需求</li><li>技术方案设计</li><li>开发</li><li>监督代码质量</li><li>跟踪进度</li><li>稳定安全的运行</li></ul><h2 id="使用vue-vuex开发h5编辑器" tabindex="-1">使用Vue + Vuex开发H5编辑器 <a class="header-anchor" href="#使用vue-vuex开发h5编辑器" aria-hidden="true">#</a></h2><p>有三个问题：</p><ul><li>点击保存按钮，提交给服务端的数据格式怎样设计？</li><li>如何保证画布和属性面板的信息同步？</li><li>如果再扩展一个图层面板，Vuex如何设计数据？</li></ul>`,76),i=[p];function r(c,o,t,u,d,h){return a(),s("div",null,i)}const y=l(e,[["render",r]]);export{m as __pageData,y as default};
